@using Abstergo.Blazor.Data
@using Abstergo.Blazor.Services
@inject FavoriteService Service

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#@ModalId">
    @if (ItemTypeToAdd == ItemType.Folder)
    {
        <i class="bi @ItemIcon.Folder.GetStringValue()"></i>
    }
    else if (ItemTypeToAdd == ItemType.Favorite)
    {
        <i class="bi @ItemIcon.Link.GetStringValue()"></i>
    }
    <span class="ms-2">Add new @ItemTypeToAdd</span>
</button>

<!-- Modal -->
<div class="modal fade" id="@ModalId" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add new @ItemTypeToAdd</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-floating">
                        <input type="text" @bind="NewItem.Name" class="form-control" id="floatingName" placeholder="name">
                        <label for="floatingName">Name</label>
                    </div>
                    @if (ItemTypeToAdd == ItemType.Favorite)
                    {
                        <div class="form-floating mt-3">
                            <input type="text" @bind="NewItem.Url" class="form-control" id="floatingUrl" placeholder="https://">
                            <label for="floatingUrl">Url</label>
                        </div>
                        <select class="form-select form-select-lg icon-select mt-3" aria-label="Default select example" @bind="NewItem.Icon">
                            @if (availableIcons is not null)
                                @foreach (var item in availableIcons)
                                {
                                    <option value="@item">@item.GetIconCharset()</option>
                                }
                        </select>
                    }
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" @onclick="() => CreateNewItem()" data-bs-dismiss="modal">Save changes</button>
            </div>
        </div>
    </div>
</div>

@code {
    private ItemIcon[]? availableIcons = Enum.GetValues(typeof(ItemIcon)) as ItemIcon[];
    [Parameter]
    public ItemType ItemTypeToAdd { get; set; }

    public Favorite NewItem { get; set; } = new Favorite();

    private string ModalId
    {
        get
        {
            return "Modal" + ItemTypeToAdd;
        }
    }

    protected async Task CreateNewItem()
    {
        NewItem.ItemType = ItemTypeToAdd;
        await Service.AddNewItem(NewItem);
        NewItem = new Favorite();
    }
}
