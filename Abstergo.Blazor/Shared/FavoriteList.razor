@using Abstergo.Blazor.Data
@using Abstergo.Blazor.Services
@inject FavoriteService Service

<h3>FavoriteList</h3>

@if (favorites == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @if (currentFolder != null)
    {
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#" @onclick="() => OpenNewFolder(currentFolder.ParentID)">Back</a></li>
                <li class="breadcrumb-item active" aria-current="page">@currentFolder.Name</li>
            </ol>
        </nav>
    }
    else
    {
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item active" aria-current="page">Home</li>
            </ol>
        </nav>
    }

    <div class="list-group">
    @foreach (var item in favorites)
    {
        @if (item.ItemType is ItemType.Folder)
        {
            <a href="#" class="list-group-item list-group-item-action" @onclick="() => OpenNewFolder(item.Id)">
                <div class="row">
                    <div class="col">
                        @item.Name
                    </div>
                    <div class="col">
                        @item.ItemType
                    </div>
                    <div class="col">
                        @item.Order
                    </div>
                    <div class="col">
                        <a href="#" @onclick="() => ChangeOrder(item.Id, item.Order - 1)">Move Up</a>
                        <a href="#" @onclick="() => ChangeOrder(item.Id, item.Order + 1)">Move Down</a>
                    </div>
                </div>
            </a>
        }
        else
        {
            <a href="@item.Url" class="list-group-item list-group-item-action" aria-current="true">
                <div class="row">
                    <div class="col">
                        @item.Name
                    </div>
                    <div class="col">
                        @item.ItemType
                    </div>
                    <div class="col">
                        @item.Order
                    </div>
                    <div class="col">
                        <a href="#" @onclick="() => ChangeOrder(item.Id, item.Order - 1)">Move Up</a>
                        <a href="#" @onclick="() => ChangeOrder(item.Id, item.Order + 1)">Move Down</a>
                    </div>
                </div>
            </a>
        }
    }
    </div>
}

@code {
    private IList<Favorite>? favorites;

    private Favorite? currentFolder;

    protected override async Task OnInitializedAsync()
    {
        favorites = await Service.GetListOfFavoritesAsync(-1);
        currentFolder = Service.CurrentFolder;
    }

    protected async Task OpenNewFolder(int id)
    {
        favorites = await Service.GetListOfFavoritesAsync(id);
        currentFolder = Service.CurrentFolder;
    }

    protected async Task ChangeOrder(int id, int newOrder)
    {
        await Service.OrderChangeAsync(id, newOrder);
        favorites = await Service.GetListOfFavoritesAsync(currentFolder?.Id ?? -1);
    }
}
